'use strict';var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};{var compose=function compose(){for(var _len=arguments.length,functions=Array(_len),_key=0;_key<_len;_key++){functions[_key]=arguments[_key];}functions=functions.filter(function(value){return typeof value==='function';});return function(value){for(var index=0,size=functions.length;index<size;index++){value=functions[index](value);}return value;};},removeFromString=function removeFromString(expression){return function(value){return value.replace(expression,'');};},trimLeft=removeFromString(/^[\s\t]+/),trimRight=removeFromString(/[\s\t]+$/),trim=compose(trimLeft,trimRight),upperCase=function upperCase(value){return String(value).toUpperCase();},identity=function identity(value){return value;},noop=function noop(){},prime=function prime(value){if(warble.is(value,'even')&&value!==2||warble.is(Math.sqrt(value),'integer'))return false;for(var index=Math.floor(value/2);index>1;index--){if(value%index===0)return false;}return true;};var improver={compose:compose,removeFromString:removeFromString,trimLeft:trimLeft,trimRight:trimRight,trim:trim,upperCase:upperCase,identity:identity,noop:noop,prime:prime};(function(root,factory){if(typeof define==='function'&&define.amd)define([],factory);else if((typeof exports==='undefined'?'undefined':_typeof(exports))==='object')module.exports=factory();else root.improver=factory();})(undefined,function(){return improver;});}
//# sourceMappingURL=improver.min.js.map
