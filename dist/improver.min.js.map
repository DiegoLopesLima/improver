{"version":3,"sources":["improver.js"],"names":["compose","functions","filter","value","index","size","length","removeFromString","replace","expression","identity","noop","testRegExp","regexp","test","improver","root","factory","define","amd","exports","module"],"mappings":"sPAAA,CAEA,GAEAA,SAAA,QAAAA,QAAA,EAAA,+BAAAC,SAAA,sCAAAA,SAAA,wBAEAA,UAAAA,UAAAC,MAAA,CAAA,sBAAA,OAAAC,MAAA,GAAA,UAAA,EAAA,CAAA,CAEA,MAAA,gBAAA,CAEA,IAAA,GAAAC,OAAA,CAAA,CAAAC,KAAAJ,UAAAK,MAAA,CAAAF,MAAAC,IAAA,CAAAD,OAAA,EAEAD,MAAAF,UAAAG,KAAA,EAAAD,KAAA,CAAA,CAFA,CAIA,MAAAA,MAAA,CAEA,CARA,CAUA,CAhBA,CAkBAI,iBAAA,QAAAA,iBAAA,mBAAA,uBAAAJ,OAAAK,OAAA,CAAAC,UAAA,CAAA,EAAA,CAAA,EAAA,EAlBA,CAoBAC,SAAA,QAAAA,SAAA,cAAAP,MAAA,EApBA,CAsBAQ,KAAA,QAAAA,KAAA,EAAA,CAAA,CAtBA,CAwBAC,WAAA,QAAAA,WAAA,eAAA,uBAAAC,QAAAC,IAAA,CAAAX,KAAA,CAAA,EAAA,EAxBA,CA0BA,GAEAY,UAAA,CACAf,eADA,CAEAO,iCAFA,CAGAG,iBAHA,CAIAC,SAJA,CAKAC,qBALA,CAFA,CAUA,CAAA,SAAAI,IAAA,CAAAC,OAAA,CAAA,CAEA,GAAA,MAAAC,OAAA,GAAA,UAAA,EAAAA,OAAAC,GAAA,CAEAD,OAAA,EAAA,CAAAD,OAAA,EAFA,IAIA,IAAA,OAAAG,QAAA,mCAAAA,OAAA,KAAA,QAAA,CAEAC,OAAAD,OAAA,CAAAH,SAAA,CAFA,IAMAD,MAAAD,QAAA,CAAAE,SAAA,CAEA,CAdA,YAcA,iBAAAF,SAAA,EAdA,EAgBA","file":"improver.min.js","sourcesContent":["{\r\n\r\n\tconst\r\n\r\n\t\tcompose = (...functions) => {\r\n\r\n\t\t\tfunctions = functions.filter(value => typeof value === 'function');\r\n\r\n\t\t\treturn value => {\r\n\r\n\t\t\t\tfor (let index = 0, size = functions.length; index < size; index++)\r\n\r\n\t\t\t\t\tvalue = functions[index](value);\r\n\r\n\t\t\t\treturn value;\r\n\r\n\t\t\t};\r\n\r\n\t\t},\r\n\r\n\t\tremoveFromString = expression => value => value.replace(expression, ''),\r\n\r\n\t\tidentity = value => value,\r\n\r\n\t\tnoop = () => {},\r\n\r\n\t\ttestRegExp = regexp => value => regexp.test(value);\r\n\r\n\tlet\r\n\r\n\t\timprover = {\r\n\t\t\tcompose,\r\n\t\t\tremoveFromString,\r\n\t\t\tidentity,\r\n\t\t\tnoop,\r\n\t\t\ttestRegExp\r\n\t\t};\r\n\r\n\t((root, factory) => {\r\n\r\n\t\tif (typeof define === 'function' && define.amd)\r\n\r\n\t\t\tdefine([], factory);\r\n\r\n\t\telse if (typeof exports === 'object')\r\n\r\n\t\t\tmodule.exports = factory();\r\n\r\n\t\telse\r\n\r\n\t\t\troot.improver = factory();\r\n\r\n\t})(this, () => improver);\r\n\r\n}\r\n"]}